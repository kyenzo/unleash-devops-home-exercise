name: CI Pipeline

on:
  push:
    branches:
      - master
      - evgeni-cicd-pipeline

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository }}/node-s3-check:latest .

      - name: Log in to GitHub Container Registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push Docker image to GitHub Container Registry
        run: docker push ghcr.io/${{ github.repository }}/node-s3-check:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code  
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name evgeni-eks-cluster --region eu-west-1

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Install NGINX Ingress Controller
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml

      - name: Wait for Ingress Controller to be ready
        run: |
          kubectl wait --namespace ingress-nginx \
            --for=condition=ready pod \
            --selector=app.kubernetes.io/component=controller \
            --timeout=120s

      - name: Deploy with Helm
        run: |
          helm upgrade --install node-s3-check helm-charts/file-checker \
            --namespace file-checker \
            --create-namespace \
            --set image.repository=ghcr.io/${{ github.repository }}/node-s3-check \
            --set image.tag=latest \
            --set image.pullPolicy=Always \
            --set ingress.enabled=true \
            --set ingress.hosts[0].host=aaba41a6d356c401680058176d35d045-1367770135.eu-west-1.elb.amazonaws.com \
            --set ingress.hosts[0].paths[0]=/ \
            --set ingress.hosts[0].paths[1]=/check-file


